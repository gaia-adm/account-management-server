machine:
  pre:
    - echo 'DOCKER_OPTS="-s btrfs -e lxc -D --userland-proxy=false"' | sudo tee -a /etc/default/docker
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.1-circleci-cp-workaround'
    - sudo chmod 0755 /usr/bin/docker
  node:
    version: 4.4.6
  services:
    - postgresql
    - docker
dependencies:
  pre:
    - sudo apt-get update && sudo apt-get install
  override:
    # build test image
    - docker build -t gaiaadm/acmserver:test --build-arg "NODE=test" .
    # build production image
    - docker build -t gaiaadm/acmserver .
    # tag production image with build build labels
    - docker tag gaiaadm/acmserver gaiaadm/acmserver:$CIRCLE_BUILD_NUM-$CIRCLE_BRANCH
    - docker tag gaiaadm/acmserver gaiaadm/acmserver:$CIRCLE_BRANCH
database:
  override:
    - createuser -s -d hpe_account_management_test
    - createdb hpe_account_management_test
test:
  override:
    - docker run --rm -it -e DB_HOST=$(ifconfig eth0 | grep "inet addr" | tr -s ' ' | cut -d ' ' -f 3 | cut -d ':' -f 2) gaiaadm/acmserver:test knex migrate:latest --env test
    - docker run --rm -it -e DB_HOST=$(ifconfig eth0 | grep "inet addr" | tr -s ' ' | cut -d ' ' -f 3 | cut -d ':' -f 2) -e DB_DATABASE=hpe_account_management_test -e DB_USER=hpe_account_management_test gaiaadm/acmserver:test npm test
    - docker run --rm -it -e DB_HOST=$(ifconfig eth0 | grep "inet addr" | tr -s ' ' | cut -d ' ' -f 3 | cut -d ':' -f 2) -e DB_DATABASE=hpe_account_management_test -e DB_USER=hpe_account_management_test gaiaadm/acmserver:test dredd
