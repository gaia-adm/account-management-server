FORMAT: 1A

# HPE Account Management API
The HPE Account Management API

# Group Users

Resources related to users

## User Collection [/api/users]

### List All Users [GET]
+ Request
    + Headers

            Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

        [
            {
                "id": 42,
                "firstName": "Richard",
                "lastName": "Plotkin",
                "isSuperuser": false
            },
            {
                "id": 1010,
                "firstName": "Alexei",
                "lastName": "Ledenev",
                "isSuperuser": false
            }
        ]

+ Request
    + Headers

            Authorization: User

+ Response 403 (application/json; charset=utf-8)

            {"message": "Forbidden"}
        
+ Request
    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

### Create a Single User [POST]

+ Request (application/json)

    + Headers

            Authorization: Superuser

    + Body

            {
                "firstName": "Dummy",
                "lastName": "User",
                "emails": ["dummyuser1@gmail.com", "dummyuser2@gmail.com"]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "firstName": "Dummy",
                "lastName": "User",
                "id": 1
            }

+ Request
    + Headers

            Authorization: User

+ Response 403 (application/json; charset=utf-8)

            {"message": "Forbidden"}

+ Request
    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}


## User [/api/users/self]

Yourself.

### Retrieve Yourself [GET]

+ Request
    + Headers

            Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 42,
            "firstName": "Richard",
            "lastName": "Plotkin",
            "isSuperuser": false,
            "emails": [
                "richard.plotkin@toptal.com",
                "richardjplotkin@gmail.com"
            ],
            "accounts": [
                {
                    "account_id": 36,
                    "name": "Test Account",
                    "role_ids": [2],
                    "role_names": ["Analyst"]
                }
             ]
        }

+ Request
    + Headers

            Authorization: User

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 1010,
            "firstName": "Richard",
            "lastName": "Plotkin",
            "isSuperuser": false,
            "emails": [
                "richard.plotkin@toptal.com",
                "richardjplotkin@gmail.com"
            ],
            "accounts": [
                {
                    "account_id": 36,
                    "name": "Test Account",
                    "role_ids": [2],
                    "role_names": ["Analyst"]
                }
             ]
        }

+ Request
    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

### Update Self [PUT]
No emails will be removed in this update.

+ Request (application/json)

    + Headers

            Authorization: Superuser

    + Body

            {
                "firstName": "Richard-Update",
                "lastName": "Plotkin-Update",
                "emails": ["richard@richardplotkin.com"]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "id": 42,
                "firstName": "Richard-Update",
                "lastName": "Plotkin-Update"
            }

+ Request (application/json)

    + Headers

            Authorization: User

    + Body

            {
                "firstName": "Alexei-Update",
                "lastName": "Ledenev-Update",
                "emails": ["alexei@hp.com"]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "id": 1010,
                "firstName": "Alexei-Update",
                "lastName": "Ledenev-Update"
            }

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

## User [/api/users/{id}]

A single user.

+ Parameters
    + id: 42 (required, string) - ID of the User

### Retrieve a Single User [GET]

+ Request
    + Headers

            Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 42,
            "firstName": "Richard",
            "lastName": "Plotkin",
            "isSuperuser": false,
            "emails": [
                "richard.plotkin@toptal.com",
                "richardjplotkin@gmail.com"
            ],
            "accounts": [
                {
                    "account_id": 36,
                    "name": "Test Account",
                    "role_ids": [2],
                    "role_names": ["Analyst"]
                }
             ]
        }

+ Request
    + Headers

            Authorization: User

+ Response 403 (application/json; charset=utf-8)

            {"message": "Forbidden"}

+ Request
    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}


### Update A Single User [PUT]
Note that a user's new emails are inserted, and existing emails will be updated to the user's id.
However, no emails will be removed in this update.

+ Request (application/json)

    + Headers

            Authorization: Superuser

    + Body

            {
                "firstName": "Richard-Update",
                "lastName": "Plotkin-Update",
                "emails": ["richard@richardplotkin.com"]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "id": 42,
                "firstName": "Richard-Update",
                "lastName": "Plotkin-Update"
            }

+ Request
    + Headers

            Authorization: User

+ Response 403 (application/json; charset=utf-8)

            {"message": "Forbidden"}

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

### Delete a Single User [DELETE]

+ Request (application/json)

    + Headers

            Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

            {"message": "User successfully deleted"}

+ Request
    + Headers

            Authorization: User

+ Response 403 (application/json; charset=utf-8)

            {"message": "Forbidden"}

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}


# Group Accounts
Resources related to accounts

## Account Collection [/api/accounts]

### List All Accounts [GET]

+ Request

    + Headers

            Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

        [
            {
                "id": 36,
                "name": "Test Account",
                "description": "Short Description"
            },
            {
                "id": 37,
                "name": "Another Account",
                "description": "Another Description"
            }
        ]

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

### Create a Single Account [POST]

+ Request (application/json)

    + Headers

            Authorization: Superuser

    + Body

            {
                "name": "Created Account",
                "description": "Created Description"
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "name": "Created Account",
                "description": "Created Description",
                "id": 100
            }

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

## Account [/api/accounts/{id}]

A single account.

+ Parameters
    + id: 36 (required, string) - ID of the Account

### Retrieve a Single Account [GET]
+ Request (application/json)

    + Headers

            Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

        {
            "id": 36,
            "name": "Test Account",
            "description": "Short Description",
            "users": [
                {
                    "firstName": "Richard",
                    "lastName": "Plotkin",
                    "id": 40,
                    "role_ids": [2],
                    "role_names": ["Analyst"]
                }
            ]
        }

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

### Update A Single Account [PUT]
The supplied list of users replaces the existing list of users. User ID and Role ID must be supplied.

+ Request (application/json)

    + Headers

                Authorization: Superuser

    + Body

            {
                "name": "Updated Account",
                "description": "Updated Description",
                "users": [{
                    "user_id": 42,
                    "role_id": 2
                }]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "id": 36,
                "name": "Updated Account",
                "description": "Updated Description",
                "users": [
                    {
                        "firstName": "User-1",
                        "lastName": "LastName-1",
                        "id": 1,
                        "role_ids": [2],
                        "role_names": ["Analyst"]
                    }
                ]
            }

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

### Delete A Single Account [DELETE]
+ Request (application/json)

    + Headers

                Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

            {"message": "Account successfully deleted"}

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

## Account Invitations [/api/accounts/{id}/invitations]

### Create An Invitation [POST]

+ Parameters
    + id: 36 (required, number) - ID of the Account

+ Request (application/json)

    + Headers

                Authorization: Superuser

    + Body

            {
                "email": "richard.plotkin@toptal.com",
                "role_ids": [1,2,3]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "id": "12345",
                "uuid": "123456",
                "email": "richard.plotkin@toptal.com",
                "invited_role_ids": [1,2,3],
                "date_invited": "2016-01-01"
            }

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

## Account Invitations [/api/invitations/{uuid}]

### Revoke An Invitation [DELETE]

+ Request (application/json)

    + Headers

                Authorization: Superuser

+ Response 200 (application/json; charset=utf-8)

            { "message": "Invitation successfully revoked."}

+ Request

    + Headers

            Authorization: None

+ Response 401 (application/json; charset=utf-8)

            {"message": "Unauthorized"}

## Account Users [/api/accounts/{id}/users/{userId}]

### Add a Single User to an Account [POST]

+ Parameters
    + id: 36 (required, number) - ID of the Account
    + userId: 42 (required, number) - ID of the User

+ Request (application/json)

    + Body

            {
                "role_ids": [1,2,3]
            }

+ Response 200 (application/json; charset=utf-8)

            {
                "firstName": "Dummy",
                "lastName": "User",
                "id": 1
            }
